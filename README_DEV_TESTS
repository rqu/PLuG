Overview
========

Tests are implemented using JUnit. There are classic unit tests that are
located in the ch.usi.dag.disl.test2.junit package and complex tests in the
ch.usi.dag.disl.test2.suite package that invoke all parts of the framework
(client, server, ...) and verify computed results.

All tests are performed calling
- ant test2

To use the for debuging purpose during development a single suite test (for
example "after" test) can be invoked calling
- ant suite-test2 -Dtest2.name=after

Parameters specified to ant at command line starting with "-Ddisl." are passed
to the test. For example to show tests output specify 
- -Ddisl.test.verbose=true

When built with "ant prepare-test2" tests can be also run directly. They are
packed in the "build-test" directory.


Implementation
==============

Implementation is a bit tricky in few aspects. 

Firstly, building of suite test apps and instrumentations is handled by a
scripted target that lists all directories in a "ch.usi.dag.disl.test2.suite"
package and one by one "app" and "instr" package are jared.

If not scripted, evil ant-contrib would be required.

Secondly, when running the instances of client and server using Process API
never forget to clear environemnt variables as inherited classpath could cause
serious troubles.

If a suite instr test contains a manifest file it's used and if none is present
"DiSLClass" is default for "DiSL-Classes" attribute.

